2017: []
2018:
  - name: ALFONSO GARCIA-CARO
    speakerUrl: speakers/alfonso-garcia-caro/
    imageUrl: public/assets/speakers/2018/alfonso-garcia-caro.jpg
    imageAltText: Alfonso Garcia Caro
    bio: Creator of Fable
    twitterUrl: https://twitter.com/alfonsogcnunez
    githubUrl: https://github.com/alfonsogarciacaro
  - name: AVI AVNI
    speakerUrl: speakers/avi-avni/
    imageUrl: public/assets/speakers/2018/avi-avni.jpg
    imageAltText: Avi Avni
    bio: F# Compiler Contributor
    twitterUrl: https://twitter.com/AviAvni3
    githubUrl: https://github.com/AviAvni
  - name: COLIN GRAVILL
    speakerUrl: speakers/colin-gravill/
    imageUrl: public/assets/speakers/2018/colin-gravill.jpg
    imageAltText: Colin Gravill
    bio: Codes with DNA
    twitterUrl: https://twitter.com/cgravill
    githubUrl: https://github.com/cgravill
  - name: DARREN PLATT
    speakerUrl: speakers/darren-platt/
    imageUrl: public/assets/speakers/2018/darren-platt.png
    imageAltText: Darren Platt
    bio: engineering life
    twitterUrl: https://twitter.com/dplattsf
  - name: DAVE CURYLO
    speakerUrl: speakers/dave-curylo/
    imageUrl: public/assets/speakers/2018/dave-curylo.JPG
    imageAltText: Dave Curylo
    bio: Cloud Native Typist
    twitterUrl: https://twitter.com/i_no_see_pound
    githubUrl: https://github.com/ninjarobot
  - name: DON SYME
    speakerUrl: speakers/don-syme/
    imageUrl: public/assets/speakers/2018/don-syme.jpeg
    imageAltText: Don Syme
    bio: Microsoft Research
    twitterUrl: https://twitter.com/dsyme
    githubUrl: https://github.com/dsyme
    blogUrl: https://blogs.msdn.microsoft.com/dsyme/
  - name: EIRIK TSARPALIS
    speakerUrl: speakers/eirik-tsarpalis/
    imageUrl: public/assets/speakers/2018/eirik-tsarpalis.jpg
    imageAltText: Eirik Tsarpalis
    bio: Mathematician by training, Developer by trade
    twitterUrl: https://twitter.com/eiriktsarpalis
    githubUrl: https://github.com/eiriktsarpalis
    blogUrl: https://eiriktsarpalis.wordpress.com/
  - name: ERIK NOVALES
    speakerUrl: speakers/erik-novales/
    imageUrl: public/assets/speakers/2018/erik-novales.jpg
    imageAltText: Erik Novales
    bio: functional programming dilettante
    twitterUrl: https://twitter.com/yankeefinn
    githubUrl: https://github.com/enovales
    blogUrl: http://www.eriknovales.com/"
  - name: Eugene Tolmachev
    speakerUrl: speakers/eugene-tolmachev/
    imageUrl: public/assets/speakers/2018/eugene-tolmachev.png
    imageAltText: Eugene Tolmachev
    bio: Endofunctor tourist
    twitterUrl:
    githubUrl: https://github.com/et1975
    blogUrl: https://thoughtspam.wordpress.com
  - name: Eugene Auduchinok
    speakerUrl: speakers/eugene-auduchinok/
    imageUrl: public/assets/speakers/2018/eugene-auduchinok.jpg
    imageAltText: Eugene Auduchinok
    bio: JetBrains
    twitterUrl: https://twitter.com/auduchinok
    githubUrl: https://github.com/auduchinok
  - name: Evelina Gabasova
    speakerUrl: speakers/evelina-gabasova/
    imageUrl: public/assets/speakers/2018/evelina-gabasova.jpg
    imageAltText: Evelina Gabasova
    bio: Interested in all things machine learning
    twitterUrl: https://twitter.com/evelgab
    githubUrl: https://github.com/evelinag
    blogUrl: http://evelinag.com/
  - name: JEREMIE CHASSAING
    speakerUrl: speakers/jeremie-chassaing/
    imageUrl: public/assets/speakers/2018/jeremie-chassaing.jpg
    imageAltText: Jeremie Chassaing
    bio: F# and DDD enthusiast
    twitterUrl: https://twitter.com/thinkb4coding
    githubUrl: https://github.com/thinkbeforecoding
    blogUrl: https://thinkbeforecoding.com/
  - name: JEREMY ABBOTT
    speakerUrl: speakers/jeremy-abbott/
    imageUrl: public/assets/speakers/2018/jeremy-abbott.jpg
    imageAltText: Jeremy Abbott
    bio: Functional programming enthusiast
    twitterUrl: https://twitter.com/mrjabbott
    githubUrl: https://github.com/jeremyabbott
    blogUrl: http://jeremyabbott.github.io
  - name: JORGE FIORANELLI
    speakerUrl: speakers/jorge-fioranelli/
    imageUrl: public/assets/speakers/2018/jorge-fioranelli.jpg
    imageAltText: Jorge Fioranelli
    bio: Director of Engineering @ jet.com
    twitterUrl: https://twitter.com/jorgefioranelli
    githubUrl: https://github.com/jorgef
    blogUrl: http://www.fsharpworkshop.com/
  - name: KRZYSZTOF CIESLAK
    speakerUrl: speakers/krzysztof-cieslak/
    imageUrl: public/assets/speakers/2018/krzysztof-cieslak.jpg
    imageAltText: Krzysztof Cieslak
    bio: OSS CONTRIBUTOR
    twitterUrl: https://twitter.com/k_cieslak
    githubUrl: https://github.com/Krzysztof-Cieslak
    blogUrl: http://www.kcieslak.io/
  - name: MARK LAWS
    speakerUrl: speakers/mark-laws/
    imageUrl: public/assets/speakers/2018/mark-laws.png
    imageAltText: Mark Laws
    bio: MDL LIKES CURRY RICE
    twitterUrl: https://twitter.com/doctorvink
    githubUrl: https://github.com/drvink
  - name: NORM JOHANSON
    speakerUrl: speakers/norm-johanson/
    imageUrl: public/assets/speakers/2018/norm-johanson.jpg
    imageAltText: Norm Johanson
    bio: Combiner of AWS & .NET
    twitterUrl: https://twitter.com/socketnorm
  - name: PHILLIP CARTER
    speakerUrl: speakers/phillip-carter/
    imageUrl: public/assets/speakers/2018/phillip-carter.jpg
    imageAltText: Phillip Carter
    bio: Purveyor of all things F# at Microsoft
    twitterUrl: https://twitter.com/_cartermp
    githubUrl: https://github.com/cartermp
    blogUrl: https://blogs.msdn.microsoft.com/dotnet/tag/f/
  - name: RYAN RILEY
    speakerUrl: speakers/ryan-riley/
    imageUrl: public/assets/speakers/2018/ryan-riley.jpg
    imageAltText: Ryan Riley
    bio: Community for F#
    twitterUrl: https://twitter.com/c4fsharp
    githubUrl: https://github.com/panesofglass
  - name: SCOTT HAVENS
    speakerUrl: speakers/scott-havens/
    imageUrl: public/assets/speakers/2018/scott-havens.jpg
    imageAltText: Scott Havens
    bio: JET.COM & WALMART LABS ENGINEERING
    twitterUrl: https://twitter.com/ScottHavens
    linkedinUrl: https://www.linkedin.com/in/scott-havens-a946713/
  - name: STACHU KORICK
    speakerUrl: speakers/stachu-korick/
    imageUrl: public/assets/speakers/2018/stachu-korick.jpg
    imageAltText: Stachu Korick
    bio: .NET Hipster
    twitterUrl: https://twitter.com/StachuDotNet
    githubUrl: https://github.com/StachuDotNet
    blogUrl: https://stachu.net/
    podcastUrl: https://wtfsharp.net/
  - name: TOMAS PETRICEK
    speakerUrl: speakers/tomas-petricek/
    imageUrl: public/assets/speakers/2018/tomas-petricek.jpg
    imageAltText: Tomas Petricek
    bio: Not just a computer scientist
    twitterUrl: https://twitter.com/tomaspetricek
    githubUrl: https://github.com/tpetricek
    blogUrl: http://tomasp.net/blog/
  - name: WILLIAM BLUM
    speakerUrl: speakers/william-blum/
    imageUrl: public/assets/speakers/2018/william-blum.jpg
    imageAltText: William Blum
    bio: Engineering lead at Microsoft
    githubUrl: https://github.com/blumu
2019:
  - name: MAXIME MANGEL
    speakerUrl: "speakers/2019/maxime-mangel"
    imageUrl: public/assets/speakers/2019/maxime-mangel.png
    imageAltText: Maxime Mangel
    bio: Living in a Fable-ous world
    githubUrl: https://github.com/MangelMaxime
    twitterUrl: https://twitter.com/MangelMaxime
    linkedinUrl: https://www.linkedin.com/in/maxime-mangel-554a71a8/
    blogUrl: https://medium.com/@MangelMaxime
    bioDetail: |
      <p> Maxime has been testing a lot of languages over the past 10 years. Finally, he stopped with F# thanks to Fable discovery.
      </p>
      <p>Since then, he works on supporting the community and improving the Fable and Elmish ecosystem. He is working at Fleet Performance on a monitoring solution for mining quarry.</p>
    talks:
    workshop:
      title: Taming Your Web App w/ Elmish
      time: Wed, Sept. 25th @ 09:00 AM (Workshop)
      abstract: |
        <p>
            Have you dipped your toes in Elmish before? And are you ready for a deeper dive into creating an Elmish app? Then this is the workshop for you.
        </p>
        <p>
            By the end of this workshop, we will have covered the following topics:
            <ul>
                <li>How to write re-usable components</li>
                <li>How to handle a session in an Elmish application</li>
                <li>How to represent state transition (ex: loadable components)</li>
                <li>How to represent HTTP request to that errors in a safe manner</li>
                <li>How to design a library and use it in our application</li>
                <li>The different ways to represents page state and when to prefer one over another</li>
                <li>Why being consistent in naming things is important</li>
            </ul>
        </p>
      tags: elmish
  - name: JOHN AZARIAH
    speakerUrl: speakers/2019/john-azariah
    imageUrl: public/assets/speakers/2019/john-azariah.jpg
    imageAltText: John Azariah
    bio: Microsoft Research
    githubUrl: https://github.com/johnazariah
    twitterUrl: https://twitter.com/johnazariah
    blogUrl: https://johnazariah.github.io/
    bioDetail: John has been doing FP in various forms for 3 decades now, actively programs in C# and F#, and plays around with LISP, Haskell and Scala. He promises not to introduce too many groans from the audience with his (they're funny, really) jokes.
    talks:
      - title: Lego Bricks, Railway Tracks, and Paper Swans (Building Blocks From The Functional World)
        level: bear
        time:
        abstract: |
          <p>Sometimes it feels like Functional Programmers speak in a different language.
          They use complicated words, arcane math terms, and it isn't immediately obvious why any of what they talk about matters for day-to-day work.
          Here's a talk that tries to address that, and show how FP concepts apply to "normal" programming.</p>
          <p>In this talk, John will walk you through how FP concepts relate to the humble `for` loop, will show you how to use FP building blocks to simplify and strengthen your code, and finally talk about how the art of origami relates to FP.
          There will be <strong>exactly one</strong> slide, at the end of the deck, with traditional FP terminology and scary words - just so you can relate the talk to more advanced material presented elsewhere.
          But otherwise, all jargon used will be familiar to a C#, C++ or Java programmer! That said, this is an intermediate level talk, and quite a few advanced concepts will be disguised in familiar form.</p>
        type: talk
        tags:
  - name: SCOTT WLASCHIN
    speakerUrl: "speakers/2019/scott-wlaschin"
    imageUrl: public/assets/speakers/2019/scott-wlaschin.jpg
    imageAltText: Scott Wlaschin
    bio: F# for Fun & Profit
    githubUrl: https://github.com/swlaschin
    twitterUrl: https://twitter.com/ScottWlaschin
    blogUrl: http://fsharpforfunandprofit.com/
    bioDetail: |
      <p>
        Scott Wlaschin is a .NET developer, architect and author.
        He has over 20 years experience in a wide variety of areas
        from high-level UX/UI to low-level database implementations.
        He loves learning programming languages, his favorites being
        Smalltalk, but also Prolog, Python, and more recently, F#,
        which he blogs about at fsharpforfunandprofit.com.
      </p>
    talks:
      - title: The F#er's Functional Programming Toolkit
        level: bunny
        time:
        abstract: |
          <p>The techniques and patterns used in functional programming are very different from object-oriented programming, and when you are just starting out it can be hard to know how they all fit together.</p>
          <p>In this talk for F# beginners, I'll present the most common tools that can be found in a functional programmer's toolkit: tools such as "compose", "reduce", "map", "return", "apply", and "bind". What are they? Why are they important? How are they used in practice? And how do they relate to computation expressions and scary sounding concepts like monoids, monads, and functors?</p>
        type: talk
        tags:
    workshop:
      title: Domain Modeling Made Functional
      time: Wed, Sept. 25th @ 09:00 AM (Workshop)
      abstract: |
        <p>
            Functional programming and domain-driven design might not seem to be a good match, but in fact functional programming can be an excellent approach to designing decoupled, reusable systems with a rich domain model.  This workshop will show you why.
        </p>
        <p>
            This will be a hands-on workshop designed for beginners in F#. We'll do lots of domain modeling exercises starting with some simple models and then enhancing them with constraints, state machines, error handling, commands and events, and so on.
        </p>
        <p>
            We'll cover these topics in detail:
            <ul>
                <li>The core concepts of functional programming and how they can be applied to Domain Driven Design</li>
                <li>How to represent the nouns and verbs of a domain ("the ubiquitous language") using types.</li>
                <li>Why representing the domain model using types is better than most other documentation (hint: it can never get out of sync)</li>
                <li>How to capture constraints and business rules in the domain model itself instead of being buried in the implementation</li>
                <li>How to represent state transitions</li>
                <li>How to treat errors as a part of the domain</li>
                <li>How to build a complete business workflow from smaller components using composition</li>
            </ul>
        </p>
      tags:
        - domain modeling
  - name: FRANK KRUEGER
    speakerUrl: "speakers/2019/frank-krueger"
    imageUrl: public/assets/speakers/2019/frank-krueger.jpg
    imageAltText: Frank A. Krueger
    bio: Mobile App Specialist
    githubUrl: https://github.com/praeclarum
    twitterUrl: https://twitter.com/praeclarum
    blogUrl: https://praeclarum.org
    bioDetail:
    talks:
  - name: GINA MARIE MAINI
    speakerUrl: "speakers/2019/gina-marie-maini"
    imageUrl: public/assets/speakers/2019/gina-marie-maini.jpg
    imageAltText: Gina Marie Maini
    bio: Digital Service Expert
    githubUrl: https://github.com/wiredsister
    twitterUrl: https://twitter.com/wiredsis
    talks:
      - title: Future Proof Library Design, Examples in F#
        level: bear
        time:
        abstract:
        type: talk
        tags:
    bioDetail:
  - name: JORGE FIORANELLI
    speakerUrl: "speakers/2019/jorge-fioranelli"
    imageUrl: public/assets/speakers/2019/jorge-fioranelli.jpg
    imageAltText: Jorge Fioranelli
    bio: Director of Engineering @ jet.com
    githubUrl: https://github.com/jorgef
    twitterUrl: https://twitter.com/jorgefioranelli
    blogUrl: http://www.fsharpworkshop.com/
    bioDetail: |
      <p>
        Jorge works as Director of Engineering at Jet.com and is very passionate about F#, Domain-Driven Design and Distributed Architectures. He is a regular speaker, co-founder of the F# Sydney user group and frequently runs workshops to introduce F# to developers.
      </p>
    workshop:
      title: F# Introduction
      time: Wed, Sept. 25th @ 09:00 AM (Workshop)
      abstract: |
        <p>
            Do you want to learn F# and Functional Programming? Well, you better start coding! Learning a new programming language is not easy, on top of reading a lot you need to practice even more. This workshop is designed to teach you some of the basics of F# and Functional Programming by combining theory (slides) and practice.
        </p>
        <p>
            Topics:
            <ul>
                <li>Bindings</li>
                <li>Functions</li>
                <li>Tuples</li>
                <li>Records</li>
                <li>High order functions</li>
                <li>Pipelining</li>
                <li>Partial application</li>
                <li>Composition</li>
                <li>Options</li>
                <li>Pattern matching</li>
                <li>Discriminated unions</li>
                <li>Units of measure</li>
                <li>Functional lists</li>
                <li>Object-oriented programming</li>
                <li>Type providers</li>
            </ul>
        </p>
      tags:
  - name: KRZYSZTOF CIESLAK
    speakerUrl: speakers/2019/krzysztof-cieslak
    imageUrl: public/assets/speakers/2019/krzysztof-cieslak.jpg
    imageAltText: Krzysztof Cieslak
    bio: OSS CONTRIBUTOR
    githubUrl: https://github.com/k_cieslak
    twitterUrl: https://twitter.com/k_cieslak
    blogUrl: http://lambdafactory.io
    bioDetail: |
      <p>
        Krzysztof is a software developer, consultant, founder of <a href="http://lambdafactory.io" target="_blank">Lambda Factory</a>. He's author of <a href="http://ionide.io/" target="_blank">Ionide</a>, <a href="http://forge.run" target="_blank">Forge</a>, <a href="https://gitlab.com/Krzysztof-Cieslak/Fornax" target="_blank">Fornax</a>, <a href="https://github.com/SaturnFramework/Saturn" target="_blank">Saturn</a> project owner and maintainer of <a href="https://marketplace.visualstudio.com/items?itemName=sbrink.elm" target="_blank">VSCode-Elm</a> and contributor to many OSS projects. Krzysztof is also an international speaker, that tries to convince developers around the world that OSS and FP are good, pragmatic choices for writing software.
      </p>
    talks:
      - title: Ionide - A OSS Story
        level: bunny
        time:
        abstract: |
          <p>Over the last few years Ionide has become one of the most important projects in F# ecosystem. It's used by thousands of users, listed on official Microsoft webpage about F#, suggested as one of the starting points with F# in the official documentation. And, what's most important, it's loved and supported by the community - either by contributions to source code and documentation, positive comments on the VSCode marketplace or support on Open Collective.</p>
          <p>In this talk, I'd like to make a walkthrough Ionide's history - from the lucky chain of events that resulted in Ionide's creation almost 5 years ago, through the difficult process of making Ionide serious IDE, to working on it full time. And talk about its future...</p>
          <p>It's also my personal story - about young and naive software developer creating his first OSS project, about his growth as a developer and as a person, about burn out and stress, about both positive and negative aspects of maintaining popular OSS project.</p>
        type: talk
        tags:
          - oss
          - ionide
  - name: RYAN KILKENNY
    speakerUrl: speakers/2019/ryan-kilkenny
    imageUrl: public/assets/speakers/2019/ryan-kilkenny.png
    imageAltText: Ryan Kilkenny
    bio: F# Hobbyist
    twitterUrl: https://twitter.com/gelletto1138
    bioDetail: |
      <p>
        Ryan Kilkenny is a multi-paradigm polyglot primarily living in the .NET world. He's been an F# enthusiast since 2013 and interested in game development since playing Space Invaders on a Commodore VIC-20 in 1985.
      </p>
    talks:
      - title: Text Adventures In Babysitting
        level: bunny
        time:
        abstract: |
          <p>FsLamp is a text adventure engine written in F#. It was developed out of a learning project meant to improve F# skills, game design skills, and hopefully pave the path towards future game development with natural language processing. In this talk we'll take a look at the game engine implementation and learn how to write interactive fiction games in F#.</p>
        type: talk
        tags:
          - interactive fiction
          - text adventure
          - game development
          - dotnetcore
          - cognitive services
  - name: RICCARDO TERRELL
    speakerUrl: speakers/2019/riccardo-terrell
    imageUrl: public/assets/speakers/2019/ricky-terrell.jpg
    imageAltText: Riccardo Terrell
    bio: Functional guy living in an imperative world
    githubUrl: https://github.com/rikace
    twitterUrl: https://twitter.com/trikace
    blogUrl: http://http://www.rickyterrell.com/
    bioDetail: |
      <p>Riccardo is an information systems and technology professional and architect specializing in software & systems development. He has over 20 years’ experience delivering cost-effective technology solutions in the competitive business environment. Riccardo is passionate about integrating advanced technology tools to increase internal efficiency, enhance work productivity, and reduce operating costs. He is a Microsoft Most Valuable Professional (MVP) who is active in the .Net, functional programming, and F# communities. Riccardo believes in multi-paradigm programming to maximize the power of code and is the author of "Functional Concurrency in .NET”; which, features how to develop highly-scalable systems in F# & C#.</p>
    workshop:
      title: Actor Clustering with Docker Containers and Akka.Net in F#
      time: Wed, Sept. 25th @ 09:00 AM (Workshop)
      abstract: |
        <p>
            In this session, you will learn to build and deploy distributed systems combining the power of Akka.Net, the flexibility of F# and the simplicity of Docker containers. The combination of these technologies enhances the effects of F# “code-quotation”, which allows the deployment of arbitrary Actors into remote Actor-Systems. You will learn the basic concepts behind Microservices implemented using the Actor and Actor Clustering, and how to leverage Docker containers for easy deployment. Docker provides an isolated environment for the applications running inside the container image. Akka.Net is a framework to build concurrent, resilient, distributed and scalable software systems. The cluster feature lets you distribute your Actors across multiple machines to achieve load balancing, fail-over and the ability to scale up and out.
        </p>
        <p>
          During this session, we will build and deploy an Actor Cluster to distribute an image processing using multiple machines.
        </p>
      tags:
        - actor
        - akka.net
        - docker
        - clustering
        - distributed systems
        - async
        - parallelism
  - name: KEVIN FEASEL
    speakerUrl: speakers/2019/kevin-feasel
    imageUrl: public/assets/speakers/2019/kevin-feasel.jpg
    imageAltText: Kevin Feasel
    bio: Microsft Data Platform MVP
    githubUrl: https://github.com/feaselkl
    twitterUrl: https://twitter.com/feaselkl
    blogUrl: https://curatedsql.com
    bioDetail: |
      <p>Kevin Feasel is a Microsoft Data Platform MVP and Engineering Manager of the Predictive Analytics team at ChannelAdvisor, where he specializes in T-SQL and R development, fighting with Kafka, and pulling rabbits out of hats on demand. He is the lead contributor to Curated SQL (https://curatedsql.com) and author of PolyBase Revealed (forthcoming). A resident of Durham, North Carolina, he can be found cycling the trails along the triangle whenever the weather's nice enough.</p>
    talks:
      - title: "A Map to Success: Functional Programming for Database Developers"
        level: bunny
        time:
        abstract: |
          <p>Over the past several years, we have seen a resurgence of interest in functional programming languages, particularly with the success of Scala and R in the marketplace. Although object-oriented (oo) design remains the dominant software development paradigm, even oo-first languages have seen a shift toward the functional mindset with the emphasis on LINQ in C# and lambdas in Java. This move toward a functional style should be particularly welcome for data platform specialists, who already have a leg up in understanding functional programming concepts thanks to their work with SQL.</p>
          <p>In this talk, we will focus on one functional programming language, F#. We will look at some of the basics of the language and see how you can translate knowledge of SQL into a pipeline-driven functional programming language. We will also see areas where F# integrates smoothly with SQL, creating a powerful way to extend your SQL skills beyond queries.</p>
        type: talk
        tags:
          - Type Providers
          - SQL Server
          - DBA
          - Wait Stats
          - Execution Plans
          - XML
          - JSON
          - Statistics
          - Graphing
          - Windowing
          - Moving Averages
  - name: COLIN GRAVILL
    speakerUrl: speakers/2019/colin-gravill
    imageUrl: public/assets/speakers/2019/colin-gravill.png
    imageAltText: Colin Gravill
    bio: Robots & DNA
    githubUrl: https://github.com/cgravill
    twitterUrl: https://twitter.com/cgravill
    blogUrl: https://www.microsoft.com/en-us/research/project/stationb/
    bioDetail: |
      <p>I like F# and science.</p>
    talks:
      - title: Browser-based intensive computation with F#
        level: tiger
        time:
        abstract: |
          <p>
            For some applications you want to run computationally intensive code in the browser for cost, privacy, or simplicity reasons.
            What are some options?
            I’ll talk about some tools we’ve built using both WebSharper and Fable that allow us to take the same code we run on thousands of machines and flexibly scale it down to web browsers.
            This will cover: Web Workers for parallelism, taking existing external C++ running as WebAssembly, and how to tie it all together productively from F# running in-browser.
          </p>
        type: talk
        tags:
          - web
          - performance
          - parallelism
          - wasm
  - name: JÉRÉMIE CHASSAING
    speakerUrl: speakers/2019/jeremie-chassaing
    imageUrl: public/assets/speakers/2019/jeremie-chassaing.jpg
    imageAltText: Jérémie Chassaing
    bio: F# all the things!
    githubUrl: https://github.com/thinkbeforecoding
    twitterUrl: https://twitter.com/thinkb4coding
    blogUrl: https://thinkbeforecoding.com
    bioDetail: |
      <p>
          Jérémie Chassaing has been practicing Domain Driven Design and Continuous Improvement for 10 years as an architect at Availpro, a channel manager for independent hotels, to increase scalability and reliability to match its rapid growth. He's an active member of the F# community. You can also see his blog thinkbeforecoding, a blog dedicated to Domain Driven Design, CQRS and Event Sourcing.
      </p>
    talks:
      - title: "#NoMemAlloc"
        level: tiger
        time:
        abstract: "<p>Functional languages have a bad reputation of allocating memory like crazy. But F#, built on .Net core , has many constructs to write code that make no allocation, like we could do in C or Rust. We'll explore Span<'t>, Memory<'t>, IsByRefLike in a F# idiomatic and functional way by writing a simple Video decoder that makes #NoMemAlloc.</p>"
        type: hands-on
        tags:
          - memory
          - span
          - NoMemAlloc
          - video