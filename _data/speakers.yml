2017: []
2018:
  - name: ALFONSO GARCIA-CARO
    speakerUrl: speakers/alfonso-garcia-caro/
    imageUrl: public/assets/speakers/2018/alfonso-garcia-caro.jpg
    imageAltText: Alfonso Garcia Caro
    bio: Creator of Fable
    twitterUrl: https://twitter.com/alfonsogcnunez
    githubUrl: https://github.com/alfonsogarciacaro
  - name: AVI AVNI
    speakerUrl: speakers/avi-avni/
    imageUrl: public/assets/speakers/2018/avi-avni.jpg
    imageAltText: Avi Avni
    bio: F# Compiler Contributor
    twitterUrl: https://twitter.com/AviAvni3
    githubUrl: https://github.com/AviAvni
  - name: COLIN GRAVILL
    speakerUrl: speakers/colin-gravill/
    imageUrl: public/assets/speakers/2018/colin-gravill.jpg
    imageAltText: Colin Gravill
    bio: Codes with DNA
    twitterUrl: https://twitter.com/cgravill
    githubUrl: https://github.com/cgravill
  - name: DARREN PLATT
    speakerUrl: speakers/darren-platt/
    imageUrl: public/assets/speakers/2018/darren-platt.png
    imageAltText: Darren Platt
    bio: engineering life
    twitterUrl: https://twitter.com/dplattsf
  - name: DAVE CURYLO
    speakerUrl: speakers/dave-curylo/
    imageUrl: public/assets/speakers/2018/dave-curylo.JPG
    imageAltText: Dave Curylo
    bio: Cloud Native Typist
    twitterUrl: https://twitter.com/i_no_see_pound
    githubUrl: https://github.com/ninjarobot
  - name: DON SYME
    speakerUrl: speakers/don-syme/
    imageUrl: public/assets/speakers/2018/don-syme.jpeg
    imageAltText: Don Syme
    bio: Microsoft Research
    twitterUrl: https://twitter.com/dsyme
    githubUrl: https://github.com/dsyme
    blogUrl: https://blogs.msdn.microsoft.com/dsyme/
  - name: EIRIK TSARPALIS
    speakerUrl: speakers/eirik-tsarpalis/
    imageUrl: public/assets/speakers/2018/eirik-tsarpalis.jpg
    imageAltText: Eirik Tsarpalis
    bio: Mathematician by training, Developer by trade
    twitterUrl: https://twitter.com/eiriktsarpalis
    githubUrl: https://github.com/eiriktsarpalis
    blogUrl: https://eiriktsarpalis.wordpress.com/
  - name: ERIK NOVALES
    speakerUrl: speakers/erik-novales/
    imageUrl: public/assets/speakers/2018/erik-novales.jpg
    imageAltText: Erik Novales
    bio: functional programming dilettante
    twitterUrl: https://twitter.com/yankeefinn
    githubUrl: https://github.com/enovales
    blogUrl: http://www.eriknovales.com/"
  - name: Eugene Tolmachev
    speakerUrl: speakers/eugene-tolmachev/
    imageUrl: public/assets/speakers/2018/eugene-tolmachev.png
    imageAltText: Eugene Tolmachev
    bio: Endofunctor tourist
    twitterUrl:
    githubUrl: https://github.com/et1975
    blogUrl: https://thoughtspam.wordpress.com
  - name: Eugene Auduchinok
    speakerUrl: speakers/eugene-auduchinok/
    imageUrl: public/assets/speakers/2018/eugene-auduchinok.jpg
    imageAltText: Eugene Auduchinok
    bio: JetBrains
    twitterUrl: https://twitter.com/auduchinok
    githubUrl: https://github.com/auduchinok
  - name: Evelina Gabasova
    speakerUrl: speakers/evelina-gabasova/
    imageUrl: public/assets/speakers/2018/evelina-gabasova.jpg
    imageAltText: Evelina Gabasova
    bio: Interested in all things machine learning
    twitterUrl: https://twitter.com/evelgab
    githubUrl: https://github.com/evelinag
    blogUrl: http://evelinag.com/
  - name: JEREMIE CHASSAING
    speakerUrl: speakers/jeremie-chassaing/
    imageUrl: public/assets/speakers/2018/jeremie-chassaing.jpg
    imageAltText: Jeremie Chassaing
    bio: F# and DDD enthusiast
    twitterUrl: https://twitter.com/thinkb4coding
    githubUrl: https://github.com/thinkbeforecoding
    blogUrl: https://thinkbeforecoding.com/
  - name: JEREMY ABBOTT
    speakerUrl: speakers/jeremy-abbott/
    imageUrl: public/assets/speakers/2018/jeremy-abbott.jpg
    imageAltText: Jeremy Abbott
    bio: Functional programming enthusiast
    twitterUrl: https://twitter.com/mrjabbott
    githubUrl: https://github.com/jeremyabbott
    blogUrl: http://jeremyabbott.github.io
  - name: JORGE FIORANELLI
    speakerUrl: speakers/jorge-fioranelli/
    imageUrl: public/assets/speakers/2018/jorge-fioranelli.jpg
    imageAltText: Jorge Fioranelli
    bio: Director of Engineering @ jet.com
    twitterUrl: https://twitter.com/jorgefioranelli
    githubUrl: https://github.com/jorgef
    blogUrl: http://www.fsharpworkshop.com/
  - name: KRZYSZTOF CIESLAK
    speakerUrl: speakers/krzysztof-cieslak/
    imageUrl: public/assets/speakers/2018/krzysztof-cieslak.jpg
    imageAltText: Krzysztof Cieslak
    bio: OSS CONTRIBUTOR
    twitterUrl: https://twitter.com/k_cieslak
    githubUrl: https://github.com/Krzysztof-Cieslak
    blogUrl: http://www.kcieslak.io/
  - name: MARK LAWS
    speakerUrl: speakers/mark-laws/
    imageUrl: public/assets/speakers/2018/mark-laws.png
    imageAltText: Mark Laws
    bio: MDL LIKES CURRY RICE
    twitterUrl: https://twitter.com/doctorvink
    githubUrl: https://github.com/drvink
  - name: NORM JOHANSON
    speakerUrl: speakers/norm-johanson/
    imageUrl: public/assets/speakers/2018/norm-johanson.jpg
    imageAltText: Norm Johanson
    bio: Combiner of AWS & .NET
    twitterUrl: https://twitter.com/socketnorm
  - name: PHILLIP CARTER
    speakerUrl: speakers/phillip-carter/
    imageUrl: public/assets/speakers/2018/phillip-carter.jpg
    imageAltText: Phillip Carter
    bio: Purveyor of all things F# at Microsoft
    twitterUrl: https://twitter.com/_cartermp
    githubUrl: https://github.com/cartermp
    blogUrl: https://blogs.msdn.microsoft.com/dotnet/tag/f/
  - name: RYAN RILEY
    speakerUrl: speakers/ryan-riley/
    imageUrl: public/assets/speakers/2018/ryan-riley.jpg
    imageAltText: Ryan Riley
    bio: Community for F#
    twitterUrl: https://twitter.com/c4fsharp
    githubUrl: https://github.com/panesofglass
  - name: SCOTT HAVENS
    speakerUrl: speakers/scott-havens/
    imageUrl: public/assets/speakers/2018/scott-havens.jpg
    imageAltText: Scott Havens
    bio: JET.COM & WALMART LABS ENGINEERING
    twitterUrl: https://twitter.com/ScottHavens
    linkedinUrl: https://www.linkedin.com/in/scott-havens-a946713/
  - name: STACHU KORICK
    speakerUrl: speakers/stachu-korick/
    imageUrl: public/assets/speakers/2018/stachu-korick.jpg
    imageAltText: Stachu Korick
    bio: .NET Hipster
    twitterUrl: https://twitter.com/StachuDotNet
    githubUrl: https://github.com/StachuDotNet
    blogUrl: https://stachu.net/
    podcastUrl: https://wtfsharp.net/
  - name: TOMAS PETRICEK
    speakerUrl: speakers/tomas-petricek/
    imageUrl: public/assets/speakers/2018/tomas-petricek.jpg
    imageAltText: Tomas Petricek
    bio: Not just a computer scientist
    twitterUrl: https://twitter.com/tomaspetricek
    githubUrl: https://github.com/tpetricek
    blogUrl: http://tomasp.net/blog/
  - name: WILLIAM BLUM
    speakerUrl: speakers/william-blum/
    imageUrl: public/assets/speakers/2018/william-blum.jpg
    imageAltText: William Blum
    bio: Engineering lead at Microsoft
    githubUrl: https://github.com/blumu
2019:
  - name: MAXIME MANGEL
    speakerUrl: "speakers/2019/maxime-mangel"
    imageUrl: public/assets/speakers/2019/maxime-mangel.png
    imageAltText: Maxime Mangel
    bio: Living in a Fable-ous world
    githubUrl: https://github.com/MangelMaxime
    twitterUrl: https://twitter.com/MangelMaxime
    linkedinUrl: https://www.linkedin.com/in/maxime-mangel-554a71a8/
    blogUrl: https://medium.com/@MangelMaxime
    bioDetail: |
      <p> Maxime has been testing a lot of languages over the past 10 years. Finally, he stopped with F# thanks to Fable discovery.
      </p>
      <p>Since then, he works on supporting the community and improving the Fable and Elmish ecosystem. He is working at Fleet Performance on a monitoring solution for mining quarry.</p>
    talks:
      - title: User-friendly apps start with dev-friendly tools
        level: bear
        date: "2019-09-27 16:00:00"
        abstract: |
          <p>As developers we use libraries every day to make our lives easier, but sometimes learning how to use them becomes more complex than the task they're supposed to solve.</p>
          <p>During this talk I will share my experience creating libraries for the Fable ecosystem, as well as some advice to design and evolve user-friendly APIs.</p>
        type: talk
        tags:
        room: A
        keynote: true
    workshop:
      title: Taming Your Web App w/ Elmish
      date: "2019-09-25 09:00:00"
      type: Deep Dive
      abstract: |
        <p>
            Have you dipped your toes in Elmish before? And are you ready for a deeper dive into creating an Elmish app? Then this is the workshop for you.
        </p>
        <p>
            By the end of this workshop, we will have covered the following topics:
            <ul>
                <li>How to write re-usable components</li>
                <li>How to handle a session in an Elmish application</li>
                <li>How to represent state transition (ex: loadable components)</li>
                <li>How to represent HTTP request to that errors in a safe manner</li>
                <li>How to design a library and use it in our application</li>
                <li>The different ways to represents page state and when to prefer one over another</li>
                <li>Why being consistent in naming things is important</li>
            </ul>
        </p>
        <p>
          <strong>Requirements:</strong>
          <ul>
            <li><a href="https://dotnet.microsoft.com/download/dotnet-core/2.2">dotnet SDK version 2.2.204</a></li>
            <li><a href="https://nodejs.org/en/">Node.JS LTS</a></li>
            <li><a href="http://ionide.io/#20150804gettingstarted">An editor with F# support like VSCode with Ionide extension</a></li>
          </ul>
        </p>
      tags: elmish
  - name: JOHN AZARIAH
    speakerUrl: speakers/2019/john-azariah
    imageUrl: public/assets/speakers/2019/john-azariah.jpg
    imageAltText: John Azariah
    bio: Microsoft Research
    githubUrl: https://github.com/johnazariah
    twitterUrl: https://twitter.com/johnazariah
    blogUrl: https://johnazariah.github.io/
    bioDetail: John has been doing FP in various forms for 3 decades now, actively programs in C# and F#, and plays around with LISP, Haskell and Scala. He promises not to introduce too many groans from the audience with his (they're funny, really) jokes.
    talks:
      - title: Lego Bricks, Railway Tracks, and Paper Swans (Building Blocks From The Functional World)
        level: bear
        date: "2019-09-27 10:00:00"
        abstract: |
          <p>Sometimes it feels like Functional Programmers speak in a different language.
          They use complicated words, arcane math terms, and it isn't immediately obvious why any of what they talk about matters for day-to-day work.
          Here's a talk that tries to address that, and show how FP concepts apply to "normal" programming.</p>
          <p>In this talk, John will walk you through how FP concepts relate to the humble `for` loop, will show you how to use FP building blocks to simplify and strengthen your code, and finally talk about how the art of origami relates to FP.
          There will be <strong>exactly one</strong> slide, at the end of the deck, with traditional FP terminology and scary words - just so you can relate the talk to more advanced material presented elsewhere.
          But otherwise, all jargon used will be familiar to a C#, C++ or Java programmer! That said, this is an intermediate level talk, and quite a few advanced concepts will be disguised in familiar form.</p>
        type: talk
        tags:
        room: A
        keynote: false
  - name: SCOTT WLASCHIN
    speakerUrl: "speakers/2019/scott-wlaschin"
    imageUrl: public/assets/speakers/2019/scott-wlaschin.jpg
    imageAltText: Scott Wlaschin
    bio: F# for Fun & Profit
    githubUrl: https://github.com/swlaschin
    twitterUrl: https://twitter.com/ScottWlaschin
    blogUrl: http://fsharpforfunandprofit.com/
    bioDetail: |
      <p>
        Scott Wlaschin is a .NET developer, architect and author.
        He has over 20 years experience in a wide variety of areas
        from high-level UX/UI to low-level database implementations.
        He loves learning programming languages, his favorites being
        Smalltalk, but also Prolog, Python, and more recently, F#,
        which he blogs about at fsharpforfunandprofit.com.
      </p>
    talks:
      - title: The F#er's Functional Programming Toolkit
        level: bunny
        date: "2019-09-26 10:30:00"
        abstract: |
          <p>The techniques and patterns used in functional programming are very different from object-oriented programming, and when you are just starting out it can be hard to know how they all fit together.</p>
          <p>In this talk for F# beginners, I'll present the most common tools that can be found in a functional programmer's toolkit: tools such as "compose", "reduce", "map", "return", "apply", and "bind". What are they? Why are they important? How are they used in practice? And how do they relate to computation expressions and scary sounding concepts like monoids, monads, and functors?</p>
        type: talk
        tags:
        room: A
        keynote: false
      - title: Domain Modeling Made Functional
        level: bunny
        date: "2019-09-27 12:00:00"
        abstract: |
          <p>Statically typed functional programming languages encourage a very different way of thinking about types. The type system is your friend, not an annoyance, and can be used in many ways that might not be familiar to OO programmers.</p>
          <p>Types can be used to represent the domain in a fine-grained, self documenting way. And in many cases, types can even be used to encode business rules so that you literally cannot create incorrect code. You can then use the static type checking almost as an instant unit test — making sure that your code is correct at compile time.</p>
          <p>In this talk, we'll look at some of the ways you can use types as part of a domain driven design process, with some simple real world examples in F#. No jargon, no maths, and no prior F# experience necessary.</p>
        type: talk
        tags:
          - domain modeling
        room: A
        keynote: false
    workshop:
      title: Domain Modeling Made Functional
      date: "2019-09-25 09:00:00"
      type: Deep Dive
      abstract: |
        <p>
            Functional programming and domain-driven design might not seem to be a good match, but in fact functional programming can be an excellent approach to designing decoupled, reusable systems with a rich domain model.  This workshop will show you why.
        </p>
        <p>
            This will be a hands-on workshop designed for beginners in F#. We'll do lots of domain modeling exercises starting with some simple models and then enhancing them with constraints, state machines, error handling, commands and events, and so on.
        </p>
        <p>
            We'll cover these topics in detail:
            <ul>
                <li>The core concepts of functional programming and how they can be applied to Domain Driven Design</li>
                <li>How to represent the nouns and verbs of a domain ("the ubiquitous language") using types.</li>
                <li>Why representing the domain model using types is better than most other documentation (hint: it can never get out of sync)</li>
                <li>How to capture constraints and business rules in the domain model itself instead of being buried in the implementation</li>
                <li>How to represent state transitions</li>
                <li>How to treat errors as a part of the domain</li>
                <li>How to build a complete business workflow from smaller components using composition</li>
            </ul>
        </p>
        <p>
          <strong>Requirements:</strong>
          <ul>
            <li>F# should be installed! <a href="https://fsharp.org/">fsharp.org</a> has installation instructions for most operations systems.</li>
            <li>If using VS Code, have <a href="http://ionide.io/#20150804gettingstarted">Ionide installed</a>.</li>
          </ul>
        </p>
      tags:
        - domain modeling
  - name: FRANK KRUEGER
    speakerUrl: "speakers/2019/frank-krueger"
    imageUrl: public/assets/speakers/2019/frank-krueger.jpg
    imageAltText: Frank A. Krueger
    bio: Mobile App Specialist
    githubUrl: https://github.com/praeclarum
    twitterUrl: https://twitter.com/praeclarum
    blogUrl: https://praeclarum.org
    bioDetail: I am a mobile app developer specializing in iOS and .NET programming. I am into graphics, AI, robotics, and programming languages.
    talks:
      - title: "Why I wish I wrote my App in F#"
        level: bear
        date: "2019-09-27 14:00:00"
        room: A
        keynote: false
  - name: JORGE FIORANELLI
    speakerUrl: "speakers/2019/jorge-fioranelli"
    imageUrl: public/assets/speakers/2019/jorge-fioranelli.jpg
    imageAltText: Jorge Fioranelli
    bio: Director of Engineering @ jet.com
    githubUrl: https://github.com/jorgef
    twitterUrl: https://twitter.com/jorgefioranelli
    blogUrl: http://www.fsharpworkshop.com/
    bioDetail: |
      <p>
        Jorge works as Director of Engineering at Jet.com and is very passionate about F#, Domain-Driven Design and Distributed Architectures. He is a regular speaker, co-founder of the F# Sydney user group and frequently runs workshops to introduce F# to developers.
      </p>
    workshop:
      title: F# Introduction
      date: "2019-09-25 09:00:00"
      type: Deep Dive
      abstract: |-
        <p>
          Do you want to learn F# and Functional Programming? Well, you better start coding! Learning a new programming language is not easy, on top of reading a lot you need to practice even more. This workshop is designed to teach you some of the basics of F# and Functional Programming by combining theory (slides) and practice.
        </p>
        <p>
        Topics:
            <ul>
                <li>Bindings</li>
                <li>Functions</li>
                <li>Tuples</li>
                <li>Records</li>
                <li>High order functions</li>
                <li>Pipelining</li>
                <li>Partial application</li>
                <li>Composition</li>
                <li>Options</li>
                <li>Pattern matching</li>
                <li>Discriminated unions</li>
                <li>Units of measure</li>
                <li>Functional lists</li>
                <li>Object-oriented programming</li>
                <li>Type providers</li>
            </ul>
          </p>
      tags:
  - name: KRZYSZTOF CIESLAK
    speakerUrl: speakers/2019/krzysztof-cieslak
    imageUrl: public/assets/speakers/2019/krzysztof-cieslak.jpg
    imageAltText: Krzysztof Cieslak
    bio: OSS CONTRIBUTOR
    githubUrl: https://github.com/k_cieslak
    twitterUrl: https://twitter.com/k_cieslak
    blogUrl: http://lambdafactory.io
    bioDetail: |
      <p>
        Krzysztof is a software developer, consultant, founder of <a href="http://lambdafactory.io" target="_blank">Lambda Factory</a>. He's author of <a href="http://ionide.io/" target="_blank">Ionide</a>, <a href="http://forge.run" target="_blank">Forge</a>, <a href="https://gitlab.com/Krzysztof-Cieslak/Fornax" target="_blank">Fornax</a>, <a href="https://github.com/SaturnFramework/Saturn" target="_blank">Saturn</a> project owner and maintainer of <a href="https://marketplace.visualstudio.com/items?itemName=sbrink.elm" target="_blank">VSCode-Elm</a> and contributor to many OSS projects. Krzysztof is also an international speaker, that tries to convince developers around the world that OSS and FP are good, pragmatic choices for writing software.
      </p>
    talks:
      - title: Ionide - A OSS Story
        level: bunny
        date: "2019-09-26 09:15:00"
        abstract: |
          <p>Over the last few years Ionide has become one of the most important projects in F# ecosystem. It's used by thousands of users, listed on official Microsoft webpage about F#, suggested as one of the starting points with F# in the official documentation. And, what's most important, it's loved and supported by the community - either by contributions to source code and documentation, positive comments on the VSCode marketplace or support on Open Collective.</p>
          <p>In this talk, I'd like to make a walkthrough Ionide's history - from the lucky chain of events that resulted in Ionide's creation almost 5 years ago, through the difficult process of making Ionide serious IDE, to working on it full time. And talk about its future...</p>
          <p>It's also my personal story - about young and naive software developer creating his first OSS project, about his growth as a developer and as a person, about burn out and stress, about both positive and negative aspects of maintaining popular OSS project.</p>
        type: talk
        tags:
          - oss
          - ionide
        room: A
        keynote: true
      - title: Saturn, the "S" in SAFE
        level: bunny
        date: "2019-09-27 09:00:00"
        abstract: |
          <p>An introductory hands-on dojo to learn how to develop full stack web applications in F#, with an emphasis on Saturn for the back-end.</p>
        type: hands-on
        tags:
          - full stack
          - SAFE
          - saturn
          - fable
          - javascript
        room: C
        keynote: false
  - name: KATE CURRAN
    speakerUrl: speakers/2019/kate-curran
    imageUrl: public/assets/speakers/2019/kate-curran.jpg
    imageAltText: Kate Curran
    bio: SCIENTIST @ DEMETRIX
    blogUrl: https://demetrixbio.com/
    bioDetail: |
      <p>Kate is a scientist at Demetrix.  She engineers microbes using DNA and robots.</p>
    talks:
      - title: Learning F# on the job as a programming novice
        level: bunny
        date: "2019-09-26 16:00:00"
        abstract: |
          <p>Demetrix is a biotech start-up built on Fsharp infrastructure.  We have some great Fsharp developers along with a lot of scientists and engineers that are relatively new to programming.  I'm in the latter camp.  I'll give some impressions and lessons learned from those of us learning F# as our first programming language.</p>
        type: talk
        tags:
          - fsharp
          - first-language
        room: A
        keynote: false
  - name: MARNEE DEARMAN
    speakerUrl: speakers/2019/marnee-dearman
    imageUrl: public/assets/speakers/2019/marnee-dearman.jpg
    imageAltText: Marnee Dearman
    bio: You can't stop the signal
    twitterUrl: marneedear
    blogUrl: https://marnee.silvrback.com
    bioDetail: |
      <p>I am the Chief Applications Architect at the University of Arizona, College of Medicine - Tucson. I am a licensed amateur radio operator and spend most of my free time getting involved in amateur radio, especially software applications in packet radio.</p>
    talks:
      - title: "F# and amateur radio: A match made in heaven"
        level: tiger
        date: "2019-09-26 16:00:00"
        abstract: |
          <p>How I used F# and .NET Core to develop a customizable APRS messaging system, for amateur radio communications networks, that runs on a Raspberry Pi and inexpensive radio equipment. I will cover how I used F# to implement the APRS specification and develop a user-defined message format.</p>
        type: talk
        tags:
          - functional domain modeling
          - amateur radio
          - communication protocols
          - mesh networks
          - emergency communications
        room: A
        keynote: false
  - name: RYAN KILKENNY
    speakerUrl: speakers/2019/ryan-kilkenny
    imageUrl: public/assets/speakers/2019/ryan-kilkenny.png
    imageAltText: Ryan Kilkenny
    bio: F# Hobbyist
    twitterUrl: https://twitter.com/gelletto1138
    bioDetail: |
      <p>
        Ryan Kilkenny is a multi-paradigm polyglot primarily living in the .NET world. He's been an F# enthusiast since 2013 and interested in game development since playing Space Invaders on a Commodore VIC-20 in 1985.
      </p>
    talks:
      - title: Text Adventures In Babysitting
        level: bunny
        date: "2019-09-26 11:40:00"
        abstract: |
          <p>FsLamp is a text adventure engine written in F#. It was developed out of a learning project meant to improve F# skills, game design skills, and hopefully pave the path towards future game development with natural language processing. In this talk we'll take a look at the game engine implementation and learn how to write interactive fiction games in F#.</p>
        type: talk
        tags:
          - interactive fiction
          - text adventure
          - game development
          - dotnetcore
          - cognitive services
        room: A
        keynote: false
  - name: KEVIN FEASEL
    speakerUrl: speakers/2019/kevin-feasel
    imageUrl: public/assets/speakers/2019/kevin-feasel.jpg
    imageAltText: Kevin Feasel
    bio: Microsft Data Platform MVP
    githubUrl: https://github.com/feaselkl
    twitterUrl: https://twitter.com/feaselkl
    blogUrl: https://curatedsql.com
    bioDetail: |
      <p>Kevin Feasel is a Microsoft Data Platform MVP and Engineering Manager of the Predictive Analytics team at ChannelAdvisor, where he specializes in T-SQL and R development, fighting with Kafka, and pulling rabbits out of hats on demand. He is the lead contributor to Curated SQL (https://curatedsql.com) and author of PolyBase Revealed (forthcoming). A resident of Durham, North Carolina, he can be found cycling the trails along the triangle whenever the weather's nice enough.</p>
    talks:
      - title: "A Map to Success: Functional Programming for Database Developers"
        level: bunny
        date: "2019-09-26 14:00:00"
        abstract: |
          <p>Over the past several years, we have seen a resurgence of interest in functional programming languages, particularly with the success of Scala and R in the marketplace. Although object-oriented (oo) design remains the dominant software development paradigm, even oo-first languages have seen a shift toward the functional mindset with the emphasis on LINQ in C# and lambdas in Java. This move toward a functional style should be particularly welcome for data platform specialists, who already have a leg up in understanding functional programming concepts thanks to their work with SQL.</p>
          <p>In this talk, we will focus on one functional programming language, F#. We will look at some of the basics of the language and see how you can translate knowledge of SQL into a pipeline-driven functional programming language. We will also see areas where F# integrates smoothly with SQL, creating a powerful way to extend your SQL skills beyond queries.</p>
        type: talk
        tags:
          - Type Providers
          - SQL Server
          - DBA
          - Wait Stats
          - Execution Plans
          - XML
          - JSON
          - Statistics
          - Graphing
          - Windowing
          - Moving Averages
        room: A
        keynote: false
  - name: COLIN GRAVILL
    speakerUrl: speakers/2019/colin-gravill
    imageUrl: public/assets/speakers/2019/colin-gravill.png
    imageAltText: Colin Gravill
    bio: Robots & DNA
    githubUrl: https://github.com/cgravill
    twitterUrl: https://twitter.com/cgravill
    blogUrl: https://www.microsoft.com/en-us/research/project/stationb/
    bioDetail: |
      <p>I like F# and science.</p>
    talks:
      - title: Browser-based intensive computation with F#
        level: tiger
        date: "2019-09-26 10:30:00"
        abstract: |
          <p>
            For some applications you want to run computationally intensive code in the browser for cost, privacy, or simplicity reasons.
            What are some options?
            I’ll talk about some tools we’ve built using both WebSharper and Fable that allow us to take the same code we run on thousands of machines and flexibly scale it down to web browsers.
            This will cover: Web Workers for parallelism, taking existing external C++ running as WebAssembly, and how to tie it all together productively from F# running in-browser.
          </p>
        type: talk
        tags:
          - web
          - performance
          - parallelism
          - wasm
        room: B
        keynote: false
  - name: JÉRÉMIE CHASSAING
    speakerUrl: speakers/2019/jeremie-chassaing
    imageUrl: public/assets/speakers/2019/jeremie-chassaing.jpg
    imageAltText: Jérémie Chassaing
    bio: F# all the things!
    githubUrl: https://github.com/thinkbeforecoding
    twitterUrl: https://twitter.com/thinkb4coding
    blogUrl: https://thinkbeforecoding.com
    bioDetail: |
      <p>
          Jérémie Chassaing has been practicing Domain Driven Design and Continuous Improvement for 10 years as an architect at Availpro, a channel manager for independent hotels, to increase scalability and reliability to match its rapid growth. He's an active member of the F# community. You can also see his blog thinkbeforecoding, a blog dedicated to Domain Driven Design, CQRS and Event Sourcing.
      </p>
    talks:
      - title: "#NoMemAlloc"
        level: tiger
        date: "2019-09-27 09:00:00"
        abstract: "<p>Functional languages have a bad reputation of allocating memory like crazy. But F#, built on .Net core , has many constructs to write code that make no allocation, like we could do in C or Rust. We'll explore Span<'t>, Memory<'t>, IsByRefLike in a F# idiomatic and functional way by writing a simple Video decoder that makes #NoMemAlloc.</p>"
        type: hands-on
        tags:
          - memory
          - span
          - NoMemAlloc
          - video
        room: B
        keynote: false
    workshop:
      title: Functional Event Sourcing
      date: "2019-09-25 09:00:00"
      type: Deep Dive
      abstract: |
        <p>
            Storing history rather than current state, Event Sourcing is a radical technique to implement Domain-Driven Design efficiently. But many stop before even trying, convinced of the difficulty to implement it.
            The workshop will teach how to implement Event Sourcing. The functional approach leads to a simple, clear and production ready solution, and uncluttered domain code!
        </p>
      tags:
  - name: PHILLIP CARTER
    speakerUrl: speakers/2019/phillip-carter
    imageUrl: public/assets/speakers/2019/phillip-carter.jpg
    imageAltText: Phillip Carter
    bio: Works on F# and other stuff at Microsoft
    githubUrl: https://github.com/cartermp
    twitterUrl: https://twitter.com/_cartermp
    bioDetail: |
      <p>
          I'm the PM for Compilers and F# on the .NET team at Microsoft.
      </p>
    talks:
      - title: "F# in 2020"
        level: bear
        date: "2019-09-27 15:00:00"
        abstract: |
          <p>Over the past year, a lot has happened for F#! Multiple releases of the language, multiple tooling releases in a variety of tools, and stronger community engagement for F# on the web and F# for machine learning have led to a larger and more diverse livelihood for F#. In this talk, Phillip will recap some of the great things in 2019 before pivoting into what he'll be focusing on for the next year. Part roadmap and part predictions, this talk will go over what you can expect in 2020 and what Phillip would personally love to see happen.</p>
        type: talk
        tags:
          - F#
          - language
          - compiler
          - tooling
        room: A
        keynote: false
  - name: ERIC HARDING
    speakerUrl: speakers/2019/eric-harding
    imageUrl: public/assets/speakers/2019/eric-harding.jpg
    imageAltText: Eric Harding
    bio: F# is My Superpower
    githubUrl: https://github.com/ericharding
    twitterUrl: https://twitter.com/digitalsorcery
    blogUrl: http://digitalsorcery.net
    bioDetail: |
      <p>
          I'm a developer at a small software startup building software for futures and options traders. We use mostly C# and C++ but I introduced F# and Fable about a year ago.  I was involved in organizing https://southernfriedfsharp.com/ and also spoke about Fable/JS interop.
      </p>
    talks:
      - title: "Developing a Fabulous Mobile App"
        level: bunny
        date: "2019-09-26 15:00:00"
        abstract: |
          <p>This talk will start by covering the Elmish/MVU pattern and how you can leverage it along with F#'s domain modeling super powers to structure your mobile application.  Then we'll talk about Fabulous and  Xamarin Forms while we walk though a mobile prototype that I worked on for a local startup.</p>
        type: talk
        tags:
          - mobile
          - xamarin
          - fabulous
          - domain modeling
          - elmish
          - mvu
        room: A
        keynote: false
  - name: BRETT HALL
    speakerUrl: speakers/2019/brett-hall
    imageUrl: public/assets/speakers/2019/brett-hall.jpg
    imageAltText: Brett Hall
    bio: Software Eng & Sometimes Physicist
    githubUrl: https://github.com/bretthall
    twitterUrl: https://twitter.com/bretthall
    blogUrl: https://backwardsincompatibilities.wordpress.com/
    bioDetail: |
      <p>Principal Software Engineer at Wyatt Technology</p>
    talks:
      - title: Using Free Monads to Simplify Workflows
        level: tiger
        date: "2019-09-27 11:00:00"
        abstract: |
          <p>At Wyatt Technology one of our products is used to run workflows during pharmaceutical production. These workflows monitor analytical instruments and control pump hardware, as well as integrating with the rest of the customer's production control system. Our first cut at implementing one of these workflows resulted in a thousand lines of state machine code that was a convoluted mess of nested matches on nested discriminated unions. While some of the code was reusable for other workflows, it was very much not clear how to extract it into a reusable form. Enter free monads and computation expressions. Using this technique we were able create a system of reusable building blocks that make it easy to write understandable workflow code (with dramatically reduced line counts). Error handling, pause/resume, and state saving/restoring is factored out so that it doesn't complicate the workflow code itself. In this workshop I'll show how to create a system of this sort.</p>
          <p>Demo code for this hands-on session is available <strong><a href="https://github.com/bretthall/workflow-demo">here</a></strong></p>
        type: hands-on
        tags:
          - workflows
          - computation expressions
        room: B
        keynote: false
  - name: SCOTT SCITES
    speakerUrl: speakers/2019/scott-scites
    imageUrl: public/assets/speakers/2019/scott_scites.png
    imageAltText: Scott Scites
    bio: Significant white-space aficionado
    githubUrl: https://github.com/scitesy
    twitterUrl: https://twitter.com/mlmaximalist
    blogUrl: https://www.railcar88.com/scitesy
    bioDetail: |
      <p>I am a Senior Software Engineer in cloud infrastructure management.</p>
    talks:
      - title: Realtime Data with Bolero and SignalR
        level: bear
        date: "2019-09-27 09:00:00"
        abstract: |
          <p>I will present WASM, Bolero and SignalR. An application that demonstrates a server connecting to an external websocket that provides pricing data to the Bolero/Elmish front end will be demonstrated. Showing svg data visualizations will be extra credit. The outline will start with a background story leading to an overview of Bolero/WASM and a segment on SignalR focused on the possibilities that realtime applications bring to user experience. I will attempt to connect the future possibilities of realtime data with the fsharp strength in data manipulation. I will also talk about the freedom that WASM brings to front end developers to choose other languages that may be better suited to a task. The demonstration will be provided at the end of the talk.</p>
        type: talk
        tags:
          - Bolero
          - WebAssembly
          - WASM
          - SignalR
          - Realtime
        room: A
        keynote: false
  - name: CHET HUSK
    speakerUrl: speakers/2019/chet-husk
    imageUrl: public/assets/speakers/2019/chet-husk.jpg
    imageAltText: Chet Husk
    bio: Security + Reliability
    githubUrl: https://github.com/chethusk
    twitterUrl: https://twitter.com/chethusk
    bioDetail: |
      <p>Web services devloper at @BinaryDefense, F#-er for ~6 years, FSSF Board of Trustees for 2, co-maintainer of FCS and other core libs. I get around.</p>
    talks:
      - title: "An introduction to profiling and performance analysis in .NET Core 3"
        level: bear
        date: "2019-09-27 11:00:00"
        abstract: |
          <p>One of the big motivations for my company's move to .Net Core was the promise of easier debugging and tracing tools. Now with the .Net SDK 3.- line, we have a suite of analysis tools that are easy to get started with and very helpful for diagnosing issues in a cross-platform way.  This talk will introduce these tools and give examples of how they can be used to profile your own applications easily and for great impact!</p>
        type: talk
        tags:
          - diagnostics
          - debugging
          - runtime
          - low-level
        room: A
        keynote: false
  - name: GAD BERGER
    speakerUrl: speakers/2019/gad-berger
    imageUrl: public/assets/speakers/2019/gad-berger.jpg
    imageAltText: Gad Berger
    bio: Walmart Lab Hoboken Tech Lead
    blogUrl: https://medium.com/@gadberger
    twitterUrl: https://twitter.com/gadberger
    bioDetail: |
      <p>Gad Berger is a Staff Software Engineer and tech lead at Walmart Lab’s Hoboken office, where he spends his day happily developing applications in F#.</p>
    talks:
      - title: "Abstracting IO using F#"
        level: tiger
        date: "2019-09-26 11:40:00"
        abstract: |
          <p>In the world of cloud-native applications, IO is everywhere. Dealing with IO can be complicated especially in enterprise level software. This talk describes an approach to abstracting IO access patterns using F# and Domain Driven Design into a set of simple to use interfaces. The same interfaces abstract the complexity of the underlying infrastructure from business functionality while maintaining consistent behaviors around retries, error handling, and observability.</p>
        type: talk
        tags:
          - I/O Abstraction
          - Infrastructure
          - F#
        room: B
        keynote: false
  - name: PAUL ORLAND
    speakerUrl: speakers/2019/paul-orland
    imageUrl: public/assets/speakers/2019/paul-orland.jpg
    imageAltText: Paul Orland
    bio: Tachyus CEO & Math Enthusiast
    blogUrl: https://tachyus.com
    bioDetail: |
      <p>I'm the co-founder and CEO of a company called Tachyus, where we build enterprise software for the energy industry using the F# programming language.  I am also passionate about scientific and mathematical programming, particularly in F# and other functional languages.  I did a lot of work in my graduate degree on solving mathematical problems in quantum and particle physics using F#.  I also have a forthcoming book called "Math for Programmers" teaching professional software developers calculus, linear algebra, and applications.</p>
    talks:
      - title: Quantum Mechanics for Functional Programmers
        level: tiger
        date: "2019-09-26 15:00:00"
        abstract: |
          <p>Quantum mechanics is the branch of physics that studies how the universe works at the smallest scales.  It has given us technologies like semiconductors, lasers, LEDs, and electron microscopes, and promises even more exciting applications like quantum computing.</p>
          <p>The quantum world is notoriously difficult to understand, since few of our intuitions about physics apply at the subatomic scale.  But not so for functional programmers!  Many of the mathematical ideas that we use to understand the quantum world, like Hilbert space, operators, tensors, and group representations, can all be understood in terms of functions.  In this talk, I'll use familiar concepts like composition, partial application, and currying to make the foundations of the subject clear and show how to solve some basic problems in F#.  At the end, I'll show how these techniques can be used to model a simple quantum computer.</p>
        type: talk
        tags:
          - Physics
          - Quantum computing
          - Tensor algebra
          - Symbolic programming
          - DSLs
        room: B
        keynote: false
  - name: WAEL EL ORAIBY
    speakerUrl: speakers/2019/wael-oraiby
    imageUrl: public/assets/speakers/2019/placeholder.png
    imageAltText: Wael El Oraiby
    bio: Team Lead @ Samsung Ads
    twitterUrl: https://twitter.com/weloraiby
    githubUrl: https://github.com/eloraiby
    bioDetail: |
      <p>Backend team lead at Samsung Ads/Adgear</p>
    talks:
      - title: 5 Millions bid request/s, 2ms Max Response Time - The Road to Damascus
        level: tiger
        date: "2019-09-26 14:00:00"
        abstract: |
          <p>High performance real-time bidding using CoreCLR/F# and LibUV</p>
        type: talk
        tags:
          - high performance bidding
          - soft real-time
          - low-level
          - network
          - libuv
          - F# with c99
        room: B
        keynote: false
  - name: BRETT ROWBERRY
    speakerUrl: speakers/2019/brett-rowberry
    imageUrl: public/assets/speakers/2019/brett-rowberry.jpg
    imageAltText: Brett Rowberry
    bio: Software Developer @ ExxonMobil
    githubUrl: https://github.com/brettrowberry
    twitterUrl: https://twitter.com/BrettRowberry
    bioDetail: |
      <p>I’ve been doing enterprise .NET development since 2016 and F# found me through a C# course on Pluralsight. I live in Houston with my beautiful wife and energetic son.</p>
    talks:
      - title: Unit Conversion Service
        level: bunny
        date: "2019-09-27 11:00:00"
        abstract: |
          <p>Let’s see how F# language features make it simple to create a unit conversion service and deploy it to Azure Functions.</p>
        type: hands-on
        tags:
          - FaaS
          - AzureFunctions
          - UnitConversion
          - Microservice
        room: C
        keynote: false
